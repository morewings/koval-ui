@import url("./customMedia.css");

.vars {
    /* CSS vars to disable IDE error */
    --xs: 0;
    --sm: 0;
    --md: 0;
    --lg: 0;
    --xl: 0;
    --shift-xs: 0;
    --shift-sm: 0;
    --shift-md: 0;
    --shift-lg: 0;
    --shift-xl: 0;
    --gap: 0;
    --base: 0;
    --container-width: 0;
}

.grid {
    display: flex;
    flex-direction: column;
    height: auto;
    margin: auto;
    max-width: 100%;
    width: var(--container-width);
}

.row {
    display: flex;
    flex-direction: row;
    flex-wrap: wrap;

    /* gap variable is taken from Container */
    gap: var(--gap);
}

.column {
    --gaps-total: calc(var(--gap) * (var(--base) - 1));
    --gaps-included: calc(var(--gap) * (var(--space) - 1));
    --single-space-width: calc((100% - var(--gaps-total)) / var(--base));
    --shift-width: calc(var(--single-space-width) * var(--shift) + var(--gap) * var(--shift));
    --column-width: calc(var(--single-space-width) * var(--space) + var(--gaps-included));

    flex: var(--space);
    margin-left: var(--shift-width);
    max-width: var(--column-width);

    &.xs {
        @media (--viewport-xs) {
            --space: var(--xs);
            --shift: var(--shift-xs);
        }
    }

    &.sm {
        @media (--viewport-sm) {
            --space: var(--sm);
            --shift: var(--shift-sm);
        }
    }

    &.md {
        @media (--viewport-md) {
            --space: var(--md);
            --shift: var(--shift-md);
        }
    }

    &.lg {
        @media (--viewport-lg) {
            --space: var(--lg);
            --shift: var(--shift-lg);
        }
    }

    &.xl {
        @media (--viewport-xl) {
            --space: var(--xl);
            --shift: var(--shift-xl);
        }
    }

    &.fluid-xs {
        @media (--viewport-xs) {
            flex-grow: 1;
        }
    }

    &.fluid-sm {
        @media (--viewport-sm) {
            flex-grow: 1;
        }
    }

    &.fluid-md {
        @media (--viewport-md) {
            flex-grow: 1;
        }
    }

    &.fluid-lg {
        @media (--viewport-lg) {
            flex-grow: 1;
        }
    }

    &.fluid-xl {
        @media (--viewport-xl) {
            flex-grow: 1;
        }
    }
}

.page {
    display: flex;
    flex-direction: column;
    min-height: 100vh;

    /** Fix for iOS Safari not capable to display 100vh. See: https://developer.mozilla.org/en-US/docs/Web/CSS/length#dynamic */
    @supports (min-height: 100dvh) {
        min-height: 100dvh;
    }
}

.header {
    &.sticky {
        position: sticky;
        top: 0;
    }
}

.content {
    display: flex;
    flex-direction: row;
    flex-grow: 1;
}

.main {
    display: flex;
    flex-direction: row;

    /* flex-grow: 1; */
}

.footer {
    margin-top: auto;
}

.aside {
    display: flex;
    width: auto;
}
