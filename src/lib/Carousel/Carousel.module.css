.vars {
    --width: 0;
    --height: 0;
    --rotations: 0;
    --cells-amount: 0;
    --index: 0;
}

.carousel {
    display: flex;
    flex-direction: column;
    max-width: 100%;
    width: calc(var(--width) * 1px);
}

.scene {
    aspect-ratio: calc(var(--width) / var(--height));
    max-width: 100%;
    overflow: hidden;

    /* Perspective makes Carousel look more 3Dish. Which may be needed for expanded design. perspective: 666px; */
    position: relative;
    width: calc(var(--width) * 1px);
}

.viewport {
    /* See more at https://3dtransforms.desandro.com/carousel */
    --rotate: calc(var(--rotations) * (360 / var(--cells-amount)));
    --translate: calc(var(--width) / (2 * tan(pi / var(--cells-amount))));

    box-sizing: border-box;
    height: 100%;
    transform: translateZ(calc(var(--translate) * -1px)) rotateY(calc(var(--rotate) * -1deg));
    transform-style: preserve-3d;
    transition: transform 1s;
    width: 100%;
}

.navigation {
    align-items: center;
    bottom: 0;
    color: var(--fg-color-fa);
    cursor: pointer;
    display: flex;
    flex-direction: column;
    justify-content: center;
    position: absolute;
    top: 0;
    width: calc(var(--fg-size-unit) * 6);
    z-index: 2;

    &:hover {
        background: color-mix(in srgb, var(--fg-color-mi) 66%, transparent);
    }

    &.left {
        left: 0;
    }

    &.right {
        right: 0;
    }
}

.icon {
    height: calc(var(--fg-size-unit) * 6);
    width: calc(var(--fg-size-unit) * 6);
}

.dots {
    align-items: center;
    display: flex;
    flex-direction: row;
    flex-wrap: nowrap;
    gap: calc(var(--fg-size-unit) * 1.5);
    height: calc(var(--fg-size-unit) * 5);
    justify-content: center;
    overflow: hidden;
}

.dot {
    background: var(--fg-color-fa);
    border-radius: var(--fg-size-unit);
    flex-shrink: 0;
    height: calc(var(--fg-size-unit) * 1.5);
    width: calc(var(--fg-size-unit) * 1.5);

    &.active {
        background: var(--fg-color-do);
    }
}

.cell {
    --cell-rotate: calc(var(--index) * (360 / var(--cells-amount)));

    position: absolute;
    transform: rotateY(calc(var(--cell-rotate) * 1deg)) translateZ(calc(var(--translate) * 1px));
    transition: transform 1s ease-out;
}
