.wrapper {
    --gap: var(--sizeUnit);
    --validationIconPlaceholder: calc(var(--sizeUnit) * 4 + var(--gap));

    align-items: center;
    display: flex;
    flex-direction: row;
    gap: var(--gap);
    max-width: 100%;
    width: var(--inputWidth);

    & > div {
        flex: 0 1 auto;
    }
}

.input {
    background-color: var(--colorMi);
    border: 3px solid var(--colorMi);
    border-radius: calc(var(--sizeUnit) * 0.66);
    color: var(--textColor);
    flex: 1;
    font-size: var(--fontSizeMedium);
    min-width: 0;
    padding: var(--sizeUnit) calc(var(--sizeUnit) * 1.5);

    &:last-child {
        margin-right: var(--validationIconPlaceholder);
    }

    &::placeholder {
        color: var(--colorFa);
        opacity: 0.66;
    }

    &:read-only {
        background-color: var(--colorMi);
        border: 3px solid var(--colorDo);
    }

    &:disabled {
        background-color: var(--background100);
        border-color: var(--background100);
        cursor: not-allowed;
    }

    &:focus::placeholder {
        color: transparent;
    }

    &:focus:not(:disabled, :read-only) {
        background-color: var(--background000);
        border-color: var(--colorRe);
        outline: none;
    }

    &:focus:not(:disabled, :read-only):invalid {
        border-color: var(--colorError);
    }
}

.prefix {
    color: var(--colorFa);
    cursor: pointer;
    flex-shrink: 0;
    height: calc(var(--sizeUnit) * 4);
    width: calc(var(--sizeUnit) * 4);

    & svg {
        color: inherit;
        height: inherit;
        width: inherit;
    }

    &:hover {
        color: var(--colorRe);
    }
}

.prefix:has(+ .input:invalid:not(:disabled)):hover,
.prefix:has(+ .input:focus:invalid:not(:disabled)) {
    color: var(--colorError);
}

.prefix:has(+ .input:focus:not(:disabled, :invalid)) {
    color: var(--colorDo);
}

.prefix:has(+ .input:hover:not(:disabled, :invalid, :focus)) {
    color: var(--colorRe);
}
