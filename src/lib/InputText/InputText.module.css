@import url("@/internal/inputs/stateSelectorsTextual.css");

.wrapper {
    --gap: var(--kg-size-unit);
    --validation-icon-placeholder: calc(var(--kg-size-unit) * 4 + var(--gap));

    align-items: center;
    display: flex;
    flex-direction: row;
    gap: var(--gap);
    max-width: 100%;
    -webkit-tap-highlight-color: transparent;
    width: auto;

    & > div {
        flex: 0 1 auto;
    }
}

.input {
    background-color: var(--kg-color-mi);
    border: var(--kg-border-width-300) solid var(--kg-color-mi);
    border-radius: var(--kg-border-radius-300);
    color: var(--kg-text-color);
    font-size: var(--kg-font-size-medium);
    font-variant-numeric: tabular-nums;
    max-width: 100%;
    min-width: 0;
    padding: var(--kg-size-unit) calc(var(--kg-size-unit) * 1.5);
    transition:
        background-color var(--kg-time-sm) ease-in-out,
        border-color var(--kg-time-sm) ease-in-out;

    &::placeholder {
        color: var(--kg-color-sol);
        opacity: 0.66;
    }

    &:--readOnlySelector {
        background-color: var(--kg-color-mi);
        border: var(--kg-border-width-300) solid var(--kg-color-do);
        user-select: all;
    }

    &:--disabledSelector {
        background-color: var(--kg-background-100);
        border-color: var(--kg-background-100);
        cursor: not-allowed;
    }

    &:--focusSelector::placeholder {
        color: transparent;
    }

    &:--focusSelector {
        background-color: var(--kg-background-000);
        border-color: var(--kg-color-re);
        outline: none;
    }

    &:--invalidSelector:focus {
        background-color: var(--kg-background-000);
        border-color: var(--kg-color-error);
    }
}

.with-validation-icon {
    & .input:last-child {
        margin-right: var(--validation-icon-placeholder);
    }
}

.prefix {
    color: var(--kg-color-sol);
    cursor: pointer;
    flex-shrink: 0;
    height: calc(var(--kg-size-unit) * 4);
    width: calc(var(--kg-size-unit) * 4);

    & svg {
        color: inherit;
        height: inherit;
        transition: color var(--kg-time-sm) ease-in-out;
        width: inherit;
    }

    &:hover {
        color: var(--kg-color-re);
    }
}

.prefix:has(+ .input:--disabledSelector) {
    color: var(--kg-background-100);
    cursor: not-allowed;
}

.prefix:has(+ .input:--invalidSelector):hover,
.prefix:has(+ .input:--invalidSelector:hover),
.prefix:has(+ .input:--invalidSelector:focus) {
    color: var(--kg-color-error);
}

.prefix:has(+ .input:--focusSelector) {
    color: var(--kg-color-do);
}

.prefix:has(+ .input:--hoverSelector) {
    color: var(--kg-color-re);
}
