@import url("@/internal/inputs/stateSelectorsInteractive.css");

.vars {
    --inputWidth: 16ch;
}

.input-file {
    --gap: var(--sizeUnit);
    --validationIconPlaceholder: calc(var(--sizeUnit) * 4 + var(--gap));

    align-items: center;
    display: flex;
    flex: 1;
    flex-direction: row;
    gap: var(--gap);
    max-width: 100%;
    width: auto;
}

.toggle {
    --toggleWidth: calc(var(--sizeUnit) * 4);
    --toggleHeight: var(--toggleWidth);

    cursor: pointer;
    height: var(--toggleHeight);
    overflow: hidden;
    position: relative;
    width: var(--toggleWidth);
}

.input {
    cursor: pointer;
    height: var(--toggleHeight);
    left: 0;
    opacity: 0;
    position: absolute;
    top: 0;
    width: var(--toggleWidth);

    &:disabled {
        cursor: not-allowed;
    }
}

.icon {
    color: var(--colorFa);
    cursor: pointer;
    height: var(--toggleHeight);
    width: var(--toggleWidth);
}

.label {
    background-color: var(--colorMi);
    border: 3px solid var(--colorMi);
    border-radius: calc(var(--sizeUnit) * 0.66);
    color: var(--colorFa);
    cursor: pointer;
    flex-grow: 1;
    font-size: var(--fontSizeMedium);
    line-height: 1.2;
    max-width: calc(100% - var(--validationIconPlaceholder));
    min-height: calc(var(--sizeUnit) * 6.33);
    min-width: 0;
    overflow: hidden;
    padding: var(--sizeUnit) calc(var(--sizeUnit) * 1.5);
    text-overflow: ellipsis;
    white-space: nowrap;
    width: var(--inputWidth);

    &:last-child {
        margin-right: var(--validationIconPlaceholder);
    }

    &[data-disabled="true"] {
        background-color: var(--background100);
        border-color: var(--background100);
        cursor: not-allowed;
    }
}

.input:--disabledSelector + .icon {
    color: var(--background100);
}

.input:--focusSelector + .icon {
    color: var(--colorDo);
}

.input:--invalidSelector:focus + .icon {
    color: var(--colorError);
}

.toggle:has(.input:--focusSelector) + .label {
    border-color: var(--colorRe);
}

.toggle:has(.input:--invalidSelector:focus) + .label,
.toggle:has(.input:--invalidSelector:hover) + .label,
.toggle:has(.input:--invalidSelector) + .label:hover {
    border-color: var(--colorError);
}

.input-file:hover {
    & .input:not(:disabled, :focus) + .icon {
        color: var(--colorRe);
    }

    & .input:--invalidSelector + .icon {
        color: var(--colorError);
    }
}

.validity {
    margin-left: auto;
}
