@import url("@/internal/inputs/stateSelectorsTextual.css");

.wrapper {
    --gap: var(--sizeUnit);
    --validationIconPlaceholder: calc(var(--sizeUnit) * 4 + var(--gap));

    align-items: center;
    display: flex;
    flex: 1;
    flex-direction: row;
    gap: var(--gap);
    max-width: 100%;
    width: auto;
}

.toggle {
    --toggleWidth: calc(var(--sizeUnit) * 4);
    --toggleHeight: var(--toggleWidth);

    cursor: pointer;
    height: var(--toggleHeight);
    position: relative;
    width: var(--toggleWidth);
}

.icon {
    color: var(--colorFa);
    cursor: pointer;
    height: var(--toggleHeight);
    position: absolute;
    width: var(--toggleWidth);
    z-index: 2;
}

.input {
    appearance: none;
    cursor: pointer;
    height: var(--toggleHeight);
    left: 0;
    opacity: 0;
    position: absolute;
    top: 0;
    width: var(--toggleWidth);
    z-index: 1;

    &:--disabledSelector {
        cursor: not-allowed;
    }
}

.input:--disabledSelector + .icon {
    color: var(--background100);
}

.input:--focusSelector + .icon {
    color: var(--colorDo);
}

.input:--invalidSelector:focus + .icon {
    color: var(--colorError);
}

.label {
    background-color: var(--colorMi);
    border: 3px solid var(--colorMi);
    border-radius: calc(var(--sizeUnit) * 0.66);
    box-sizing: content-box;
    color: var(--textColor);
    cursor: pointer;
    flex-grow: 0;
    flex-shrink: 0;
    font-size: var(--fontSizeMedium);
    height: calc(var(--inputHeight) - var(--sizeUnit) * 3);
    min-width: 0;
    padding: var(--sizeUnit) calc(var(--sizeUnit) * 1.5);
    user-select: all;
    width: 10ch;

    &:last-child {
        margin-right: var(--validationIconPlaceholder);
    }
}

.toggle:has(.input:--focusSelector) + .label {
    border-color: var(--colorRe);
}

.toggle:has(.input:--readOnlySelector) + .label:hover,
.toggle:has(.input:--readOnlySelector:hover) + .label,
.toggle:has(.input:--readOnlySelector:focus) + .label {
    background-color: var(--colorMi);
    border: 3px solid var(--colorDo);
    user-select: all;
}

.toggle:has(.input:--disabledSelector) + .label {
    background-color: var(--background100);
    border-color: var(--background100);
    cursor: not-allowed;
}

.toggle:has(.input:--invalidSelector:focus) + .label,
.toggle:has(.input:--invalidSelector:hover) + .label,
.toggle:has(.input:--invalidSelector) + .label:hover {
    border-color: var(--colorError);
}

.wrapper:hover {
    & .input:not(:--disabledSelector) + .icon {
        color: var(--colorRe);
    }

    & .input:--invalidSelector + .icon {
        color: var(--colorError);
    }
}

.validity {
    margin-left: auto;
}
