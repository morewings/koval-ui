@import url("@/internal/inputs/stateSelectorsInteractive.css");

.wrapper {
    --gap: var(--kg-size-unit);
    --selected-color: var(--kg-color-do);
    --inverted-color: var(--kg-text-color);

    align-items: center;
    display: flex;
    flex: 1;
    flex-direction: row;
    gap: var(--gap);
    max-width: 100%;
    -webkit-tap-highlight-color: transparent;
    width: auto;
}

.toggle {
    --toggle-width: calc(var(--kg-size-unit) * 4);
    --toggle-height: var(--toggle-width);

    cursor: pointer;
    height: var(--toggle-height);
    position: relative;
    width: var(--toggle-width);
}

.icon {
    align-items: center;
    color: var(--kg-color-sol);
    cursor: pointer;
    display: flex;
    flex-direction: row; /* make flex direction horizontal */
    height: calc(var(--kg-size-unit) * 4);
    justify-content: center; /* center items horizontally, in this case */
    left: 50%;
    pointer-events: none;
    position: absolute;
    top: 50%;
    transform: translate(-50%, -50%);
    transition: color var(--kg-time-sm) ease-in-out;
    width: calc(var(--kg-size-unit) * 4);
}

.input {
    cursor: pointer;
    height: var(--toggle-height);
    opacity: 0;
    width: var(--toggle-width);

    &:--focusSelector {
        border-color: var(--kg-color-re);
    }

    &:--disabledSelector {
        cursor: not-allowed;
    }
}

.input:--disabledSelector + .icon {
    color: var(--kg-background-100);
}

.input:--focusSelector + .icon {
    color: var(--kg-color-do);
}

.input:--invalidSelector:focus + .icon {
    color: var(--kg-color-error);
}

.label {
    background-color: var(--selected-color);
    border: var(--kg-border-width-300) solid var(--selected-color);
    border-radius: var(--kg-border-radius-300);
    box-sizing: content-box;
    color: var(--inverted-color);
    cursor: pointer;
    flex-grow: 0;
    flex-shrink: 0;
    font-size: var(--kg-font-size-medium);
    min-width: 0;
    padding: var(--kg-size-unit) calc(var(--kg-size-unit) * 1.5);
    width: 7ch;

    &:--disabledSelector {
        background-color: var(--kg-background-100);
        border-color: var(--kg-background-100);
        cursor: not-allowed;
    }
}

.toggle:has(.input:--focusSelector) + .label {
    border-color: var(--kg-color-re);
}

.toggle:has(.input:--invalidSelector) + .label {
    border-color: var(--kg-color-error);
}

.toggle:has(.input:--disabledSelector) + .label {
    background: var(--kg-background-100);
    border-color: var(--kg-background-100);
    cursor: not-allowed;
    user-select: none;
}

.toggle:has(.input:--readOnlySelector:focus) + .label,
.toggle:has(.input:--readOnlySelector:hover) + .label,
.toggle:has(.input:--readOnlySelector) + .label:hover {
    background-color: var(--kg-color-mi);
    border: 3px solid var(--kg-color-do);
}

.wrapper:hover {
    & .input + .icon {
        color: var(--kg-color-re);
    }

    & .input:--disabledSelector + .icon {
        color: var(--kg-background-100);
    }

    & .input:--invalidSelector + .icon {
        color: var(--kg-color-error);
    }
}

.validity {
    margin-left: auto;
}
